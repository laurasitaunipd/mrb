# Grafico
ggplot(freq_table, aes(x = Risposta, y = Percentuale, fill = Gruppo)) +
geom_col(position = position_dodge(width = 0.8), width = 0.7) +
geom_text(aes(label = Frequenza),
position = position_dodge(width = 0.8), vjust = -0.4, size = 5) +
labs(
title = titolo,
x = "Risposta",
y = "Percentuale",
fill = "Gruppo"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
}
## Funzione per dati disaggregati - Likert "Per niente-Molto"
plot_likert_gruppi_molto <- function(colonna, titolo) {
# Aggiunge il gruppo
datacleaned$Gruppo <- ifelse(datacleaned$"1" %in% c("PO, PA, RTD, RTT"), "Strutturati",
ifelse(datacleaned$"1" %in% c("Dottorato, assegno di ricerca"), "Non-strutturati", NA))
# Mappa valori inconsistenti
mappa_likert <- c(
"Per niente" = "Per niente", "per niente" = "Per niente",
"Poco" = "Poco", "poco" = "Poco",
"Abbastanza" = "Abbastanza", "abbastanza" = "Abbastanza",
"Molto" = "Molto", "molto" = "Molto"
)
livelli_ordinati <- c("Per niente", "Poco", "Abbastanza", "Molto")
# Pulisce e mappa i dati
dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]) & !is.na(datacleaned$Gruppo), ]
dati_filtrati$Risposta <- mappa_likert[as.character(dati_filtrati[[colonna]])]
dati_filtrati <- dati_filtrati[!is.na(dati_filtrati$Risposta) & dati_filtrati$Risposta != "", ]
dati_filtrati$Risposta <- factor(dati_filtrati$Risposta, levels = livelli_ordinati, ordered = TRUE)
# Crea tabella frequenze con gestione gruppi
freq_table <- as.data.frame(table(dati_filtrati$Risposta, dati_filtrati$Gruppo))
colnames(freq_table) <- c("Risposta", "Gruppo", "Frequenza")
# Percentuali per gruppo
totali <- aggregate(Frequenza ~ Gruppo, data = freq_table, sum)
freq_table <- merge(freq_table, totali, by = "Gruppo", suffixes = c("", "_Totale"))
freq_table$Percentuale <- (freq_table$Frequenza / freq_table$Frequenza_Totale) * 100
# Grafico
ggplot(freq_table, aes(x = Risposta, y = Percentuale, fill = Gruppo)) +
geom_col(position = position_dodge(width = 0.8), width = 0.7) +
geom_text(aes(label = Frequenza),
position = position_dodge(width = 0.8), vjust = -0.4, size = 5) +
labs(
title = titolo,
x = "Risposta",
y = "Percentuale",
fill = "Gruppo"
) +
scale_x_discrete(drop = FALSE, limits = livelli_ordinati) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
}
plot_likert_gruppi_completamente <- function(colonna, titolo) {
# Aggiunge il gruppo
datacleaned$Gruppo <- ifelse(datacleaned$"1" %in% c("PO, PA, RTD, RTT"), "Strutturati",
ifelse(datacleaned$"1" %in% c("Dottorato, assegno di ricerca"), "Non-strutturati", NA))
# Mappatura
mappa_likert <- c(
"Per niente" = "Per niente", "per niente" = "Per niente",
"Poco" = "Poco", "poco" = "Poco",
"Abbastanza" = "Abbastanza", "abbastanza" = "Abbastanza",
"Completamente" = "Completamente", "completamente" = "Completamente"
)
livelli_ordinati <- c("Per niente", "Poco", "Abbastanza", "Completamente")
# Pulizia
dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]) & !is.na(datacleaned$Gruppo), ]
dati_filtrati$Risposta <- mappa_likert[as.character(dati_filtrati[[colonna]])]
dati_filtrati <- dati_filtrati[!is.na(dati_filtrati$Risposta) & dati_filtrati$Risposta != "", ]
dati_filtrati$Risposta <- factor(dati_filtrati$Risposta, levels = livelli_ordinati, ordered = TRUE)
# Tabella frequenze robusta
freq_table <- as.data.frame(table(dati_filtrati$Risposta, dati_filtrati$Gruppo))
colnames(freq_table) <- c("Risposta", "Gruppo", "Frequenza")
# Calcolo percentuali
totali <- aggregate(Frequenza ~ Gruppo, data = freq_table, sum)
freq_table <- merge(freq_table, totali, by = "Gruppo", suffixes = c("", "_Totale"))
freq_table$Percentuale <- (freq_table$Frequenza / freq_table$Frequenza_Totale) * 100
# Grafico
ggplot(freq_table, aes(x = Risposta, y = Percentuale, fill = Gruppo)) +
geom_col(position = position_dodge(width = 0.8), width = 0.7) +
geom_text(aes(label = Frequenza),
position = position_dodge(width = 0.8), vjust = -0.4, size = 5) +
labs(
title = titolo,
x = "Risposta",
y = "Percentuale",
fill = "Gruppo"
) +
scale_x_discrete(drop = FALSE, limits = livelli_ordinati) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
}
# Plot categoria personale
plot_frequenze("1", "Categoria personale")
## Metodi ricerca
plot_confronto_gruppi("2.1", "Quantitativo - Sperimentale")
plot_confronto_gruppi("2.2", "Quantitativo - Osservazionale")
plot_confronto_gruppi("2.3", "Quantitativo - Altro")
plot_confronto_gruppi("2.4", "Qualitativo")
plot_confronto_gruppi("2.5", "Teorico")
## Account OSF
plot_confronto_gruppi("3", "Account OSF")
## Crisi di replicabilità
plot_confronto_gruppi("4", "Ne hai sentito parlare")
plot_confronto_gruppi("5", "È rilevante?")
## Cause crisi
plot_likert_gruppi_molto("6.1", "Metodi obsoleti")
plot_likert_gruppi_molto("6.2", "Scarsa qualità dati")
plot_likert_gruppi_molto("6.3", "Mancanza validità esterna")
plot_likert_gruppi_molto("6.4", "Mancanza validità interna")
plot_likert_gruppi_molto("6.5", "Publication Bias")
plot_likert_gruppi_molto("6.6", "GDL Ricercatore")
plot_likert_gruppi_molto("6.7", "Frode")
## Familiarità con pratiche di Open Science
plot_confronto_gruppi("7.1", "Pre-registrazione Ipotesi")
plot_confronto_gruppi("7.2", "Pre-registrazione Analisi")
plot_confronto_gruppi("7.3", "Registered Report")
## Utilizzo pratiche Open Science
plot_confronto_gruppi("8.1", "Pre-registrazione Ipotesi")
plot_confronto_gruppi("8.2", "Pre-registrazione Analisi")
plot_confronto_gruppi("8.3", "Registered Report")
plot_confronto_gruppi("8.4", "Open Materials")
plot_confronto_gruppi("8.5", "Open Code")
plot_confronto_gruppi("8.6", "Open Data")
## Contributo dell'Open science al progresso della propria disciplina
plot_likert_gruppi_molto("9.1", "Pre-registrazione Ipotesi")
plot_likert_gruppi_molto("9.2", "Pre-registrazione Analisi")
plot_likert_gruppi_molto("9.3", "Registered Report")
## Utilizzo futuro pratiche Open science
plot_likert_gruppi_molto("10.1", "Pre-registrazione Ipotesi")
plot_likert_gruppi_molto("10.2", "Pre-registrazione Analisi")
plot_likert_gruppi_molto("10.3", "Open Materials")
plot_likert_gruppi_molto("10.4", "Open Code")
plot_likert_gruppi_molto("10.5", "Open Data")
plot_confronto_gruppi("11.1", "Qualcuno del gruppo di ricerca")
plot_confronto_gruppi("11.2", "Esperto Esterno - Co-autore")
plot_confronto_gruppi("11.3", "Esperto esterno - NO Co-autore")
## Assistenza pre-registrazione
plot_likert_gruppi_completamente("12.1", "Aiuto per pre-registrare")
plot_likert_gruppi_completamente("12.2", "Mi rivolgerei al MRB")
## Utilità MRB
plot_likert_gruppi_completamente("13.1", "Punto di riferimento per ambito metodologico")
plot_likert_gruppi_completamente("13.2", "Promuovere collaborazioni")
plot_likert_gruppi_completamente("13.3", "Prevenire sprechi")
plot_likert_gruppi_completamente("13.4", "Migliorare qualità ricerca")
plot_likert_gruppi_completamente("13.5", "Promuovere buone pratiche")
## MRB integrato nel Comitato Etico
plot_confronto_gruppi("14", "Integrazione nel Comitato Etico")
## Partecipazione a tavola rotonda
plot_confronto_gruppi("16", "Partecipazione")
plot_frequenze <- function(colonna, titolo) {
# Rimuove valori NA
dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]), ]
# Esci se non ci sono dati
if (nrow(dati_filtrati) == 0) {
warning("Nessun dato disponibile per il grafico.")
return(NULL)
}
# Calcola frequenze assolute e percentuali
freq_table <- as.data.frame(table(Risposta = dati_filtrati[[colonna]]))
colnames(freq_table)[2] <- "Frequenza"
freq_table$Percentuale <- (freq_table$Frequenza / sum(freq_table$Frequenza)) * 100
# Crea il grafico
ggplot(freq_table, aes(x = Risposta, y = Percentuale, fill = Risposta)) +
geom_col(width = 0.7, show.legend = FALSE) +
geom_text(aes(label = Frequenza), vjust = -0.4, size = 5) +
labs(
title = titolo,
x = "Risposta",
y = "Percentuale"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")
)
}
View(datacleaned)
View(datacleaned)
View(datacleaned)
#| echo: false
rm(list= ls())
library(here)
library(readxl)
library(ggplot2)
library(dplyr)
library (patchwork)
######################################## Importazione Dataset
dataMRB <- read_excel(here("dati.xlsx"))
dataMRB <- data.frame(dataMRB)
######################################## DATACLEANING
## 1.1. Eliminazione di righe == preview (compilazioni pre-15 aprile),
## questionari non completi
## prime due righe ridondanti
datacleaned <- dataMRB[-(c(1:12, 62, 67)), -(c(2:6,8:17))]
datacleaned <- datacleaned [datacleaned$Finished == "True",]
## Rinominazione degli item ID
item_renamed <- matrix(data = c("Start date", "Finished", 1, 2.1, 2.2, 2.3, 2.4
,
2.5, 3, 4, 5, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6,
6.7, 7.1, 7.2, 7.3, 8.1, 8.2, 8.3, 8.4, 8.5,
8.6, 9.1, 9.2, 9.3, 10.1, 10.2, 10.3, 10.4,
10.5, 11.1, 11.2, 11.3, 12.1, 12.2, 13.1,
13.2, 13.3, 13.4, 13.5, 14, 15, 16
), 1, 48)
colnames(datacleaned) <- as.character(datacleaned[1, ])  # Set first row as column names
colnames(datacleaned) <- item_renamed
row_renamed <- matrix(data = 1, c(1:53) 1, 53)
item_renamed <- matrix(data = c("Start date", "Finished", 1, 2.1, 2.2, 2.3, 2.4
,
2.5, 3, 4, 5, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6,
6.7, 7.1, 7.2, 7.3, 8.1, 8.2, 8.3, 8.4, 8.5,
8.6, 9.1, 9.2, 9.3, 10.1, 10.2, 10.3, 10.4,
10.5, 11.1, 11.2, 11.3, 12.1, 12.2, 13.1,
13.2, 13.3, 13.4, 13.5, 14, 15, 16
), 1, 48)
colnames(datacleaned) <- as.character(datacleaned[1, ])  # Set first row as column names
colnames(datacleaned) <- item_renamed
row_renamed <- matrix(data = 1, c(1:53), 53)
colnames(datacleaned) <- as.character(datacleaned[1, ])  # Set first row as column names
colnames(datacleaned) <- row_renamed
#| echo: false
rm(list= ls())
library(here)
library(ggplot2)
library (patchwork)
dataMRB <- data.frame(dataMRB)
dataMRB <- read_excel(here("dati.xlsx"))
dataMRB <- data.frame(dataMRB)
datacleaned <- dataMRB[-(c(1:12, 62, 67)), -(c(2:6,8:17))]
datacleaned <- datacleaned [datacleaned$Finished == "True",]
item_renamed <- matrix(data = c("Start date", "Finished", 1, 2.1, 2.2, 2.3, 2.4
,
2.5, 3, 4, 5, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6,
6.7, 7.1, 7.2, 7.3, 8.1, 8.2, 8.3, 8.4, 8.5,
8.6, 9.1, 9.2, 9.3, 10.1, 10.2, 10.3, 10.4,
10.5, 11.1, 11.2, 11.3, 12.1, 12.2, 13.1,
13.2, 13.3, 13.4, 13.5, 14, 15, 16
), 1, 48)
colnames(datacleaned) <- as.character(datacleaned[1, ])  # Set first row as column names
colnames(datacleaned) <- item_renamed
row_renamed <- matrix(data = 1, c(1:53), 53)
rownames(datacleaned) <- as.character(datacleaned[, 1 ])  # Set first row as column names
rownames(datacleaned) <- row_renamed
View(datacleaned)
#| echo: false
rm(list= ls())
library(here)
library(readxl)
library(ggplot2)
library(dplyr)
library (patchwork)
######################################## Importazione Dataset
dataMRB <- read_excel(here("dati.xlsx"))
dataMRB <- data.frame(dataMRB)
######################################## DATACLEANING
## 1.1. Eliminazione di righe == preview (compilazioni pre-15 aprile),
## questionari non completi
## prime due righe ridondanti
datacleaned <- dataMRB[-(c(1:12, 62, 67)), -(c(2:6,8:17))]
datacleaned <- datacleaned [datacleaned$Finished == "True",]
## Rinominazione degli item ID
item_renamed <- matrix(data = c("Start date", "Finished", 1, 2.1, 2.2, 2.3, 2.4,
2.5, 3, 4, 5, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6,
6.7, 7.1, 7.2, 7.3, 8.1, 8.2, 8.3, 8.4, 8.5,
8.6, 9.1, 9.2, 9.3, 10.1, 10.2, 10.3, 10.4,
10.5, 11.1, 11.2, 11.3, 12.1, 12.2, 13.1,
13.2, 13.3, 13.4, 13.5, 14, 15, 16
), 1, 48)
colnames(datacleaned) <- as.character(datacleaned[1, ])  # Set first row as column names
colnames(datacleaned) <- item_renamed
## Rinominazione righe
row_renamed <- matrix(data = c(1:53), nrow = 53, ncol = 1)
rownames(datacleaned) <- as.character(datacleaned[,1])
rownames (datacleaned) <- row_renamed
######################################## FUNZIONI DESCRITTIVE AGGREGATE
## Funzione per plot frequenze
plot_frequenze <- function(colonna, titolo) {
dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]), ]
if (nrow(dati_filtrati) == 0) {
warning("Nessun dato disponibile per il grafico.")
return(NULL)
}
freq_table <- as.data.frame(table(Risposta = dati_filtrati[[colonna]]))
colnames(freq_table)[2] <- "Frequenza"
freq_table$Percentuale <- (freq_table$Frequenza / sum(freq_table$Frequenza)) * 100
N <- sum(freq_table$Frequenza)
ggplot(freq_table, aes(x = Risposta, y = Percentuale)) +
geom_col(width = 0.7, fill = "#4682B4", show.legend = FALSE) +
geom_text(aes(label = paste0("n=", Frequenza)), vjust = -0.4, size = 4.5) +
labs(
title = titolo,
subtitle = paste("N =", N),
x = "Risposta",
y = "Percentuale"
) +
scale_y_continuous(breaks = seq(0, 100, by = 5)) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(face = "bold", size = 15, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
plot.margin = margin(t = 20, r = 10, b = 10, l = 10)
)
}
## Funzione per likert "Per niente-Molto"
plot_likert_molto <- function(colonna, titolo) {
dati <- datacleaned[[colonna]]
mappa_likert <- c(
"Per niente" = "Per niente", "per niente" = "Per niente",
"Poco" = "Poco", "poco" = "Poco",
"Abbastanza" = "Abbastanza", "abbastanza" = "Abbastanza",
"Molto" = "Molto", "molto" = "Molto"
)
dati_raggruppati <- mappa_likert[as.character(dati)]
dati_raggruppati <- dati_raggruppati[!is.na(dati_raggruppati) & dati_raggruppati != ""]
livelli_ordinati <- c("Per niente", "Poco", "Abbastanza", "Molto")
dati_fattore <- factor(dati_raggruppati, levels = livelli_ordinati, ordered = TRUE)
freq_table <- as.data.frame(table(Risposta = dati_fattore))
colnames(freq_table)[2] <- "Frequenza"
freq_table$Percentuale <- (freq_table$Frequenza / sum(freq_table$Frequenza)) * 100
N <- sum(freq_table$Frequenza)
ggplot(freq_table, aes(x = Risposta, y = Percentuale)) +
geom_col(width = 0.7, fill = "#4682B4", show.legend = FALSE) +
geom_text(aes(label = paste0("n=", Frequenza)), vjust = -0.4, size = 5.2) +
labs(
title = titolo,
subtitle = paste("N =", N),
x = "Risposta",
y = "Percentuale"
) +
scale_x_discrete(drop = FALSE, limits = livelli_ordinati) +
scale_y_continuous(breaks = seq(0, 100, by = 5)) +
theme_minimal(base_size = 15) +
theme(
plot.title = element_text(face = "bold", size = 17, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
plot.margin = margin(t = 20, r = 10, b = 10, l = 10)
)
}
## Funzione likert "Per niente-Completamente"
plot_likert_completamente <- function(colonna, titolo) {
dati <- datacleaned[[colonna]]
mappa_likert_1 <- c(
"Per niente" = "Per niente", "per niente" = "Per niente",
"Poco" = "Poco", "poco" = "Poco",
"Abbastanza" = "Abbastanza", "abbastanza" = "Abbastanza",
"Completamente" = "Completamente", "completamente" = "Completamente"
)
dati_raggruppati <- mappa_likert_1[as.character(dati)]
dati_raggruppati <- dati_raggruppati[!is.na(dati_raggruppati) & dati_raggruppati != ""]
livelli_ordinati <- c("Per niente", "Poco", "Abbastanza", "Completamente")
dati_fattore <- factor(dati_raggruppati, levels = livelli_ordinati, ordered = TRUE)
freq_table <- as.data.frame(table(Risposta = dati_fattore))
colnames(freq_table)[2] <- "Frequenza"
freq_table$Percentuale <- (freq_table$Frequenza / sum(freq_table$Frequenza)) * 100
N <- sum(freq_table$Frequenza)
ggplot(freq_table, aes(x = Risposta, y = Percentuale)) +
geom_col(width = 0.7, fill = "#4682B4", show.legend = FALSE) +
geom_text(aes(label = paste0("n=", Frequenza)), vjust = -0.4, size = 5.2) +
labs(
title = titolo,
subtitle = paste("N =", N),
x = "Risposta",
y = "Percentuale"
) +
scale_x_discrete(drop = FALSE, limits = livelli_ordinati) +
scale_y_continuous(breaks = seq(0, 100, by = 5)) +
theme_minimal(base_size = 15) +
theme(
plot.title = element_text(face = "bold", size = 17, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
plot.margin = margin(t = 20, r = 10, b = 10, l = 10)
)
}
######################################## FUNZIONI DESCRITTIVE DISAGGREGATE
## Rinominare gruppi Strutturati e Non-strutturati
datacleaned$Gruppo <- ifelse(datacleaned$"1" %in% c("PO, PA, RTD, RTT"), "Strutturati",
ifelse(datacleaned$"1" %in% c("Dottorato, assegno di ricerca"), "Non-strutturati", NA))
## Funzione per visualizzazione dati disaggregati (dicotomiche)
plot_confronto_gruppi <- function(colonna, titolo) {
datacleaned$Gruppo <- ifelse(datacleaned$"1" %in% c("PO, PA, RTD, RTT"), "Strutturati",
ifelse(datacleaned$"1" %in% c("Dottorato, assegno di ricerca"), "Non-strutturati", NA))
dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]) & !is.na(datacleaned$Gruppo), ]
if (nrow(dati_filtrati) == 0) {
warning("Nessun dato disponibile per il grafico.")
return(NULL)
}
freq_table <- as.data.frame(table(Risposta = dati_filtrati[[colonna]], Gruppo = dati_filtrati$Gruppo))
colnames(freq_table)[3] <- "Frequenza"
totali <- aggregate(Frequenza ~ Gruppo, data = freq_table, sum)
freq_table <- merge(freq_table, totali, by = "Gruppo", suffixes = c("", "_Totale"))
freq_table$Percentuale <- (freq_table$Frequenza / freq_table$Frequenza_Totale) * 100
ggplot(freq_table, aes(x = Risposta, y = Percentuale, fill = Gruppo)) +
geom_col(position = position_dodge(width = 0.8), width = 0.7) +
geom_text(aes(label = paste0("n=", Frequenza)),
position = position_dodge(width = 0.8), vjust = -0.4, size = 4.5) +
labs(
title = titolo,
subtitle = paste("N =", sum(freq_table$Frequenza)),
x = "Risposta",
y = "Percentuale",
fill = "Gruppo"
) +
scale_y_continuous(breaks = seq(0, 100, by = 5)) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(face = "bold", size = 15, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
plot.margin = margin(t = 20, r = 10, b = 10, l = 10)
)
}
## Funzione per dati disaggregati - Likert "Per niente-Molto"
plot_likert_gruppi_molto <- function(colonna, titolo) {
datacleaned$Gruppo <- ifelse(datacleaned$"1" %in% c("PO, PA, RTD, RTT"), "Strutturati",
ifelse(datacleaned$"1" %in% c("Dottorato, assegno di ricerca"), "Non-strutturati", NA))
mappa_likert <- c(
"Per niente" = "Per niente", "per niente" = "Per niente",
"Poco" = "Poco", "poco" = "Poco",
"Abbastanza" = "Abbastanza", "abbastanza" = "Abbastanza",
"Molto" = "Molto", "molto" = "Molto"
)
livelli_ordinati <- c("Per niente", "Poco", "Abbastanza", "Molto")
dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]) & !is.na(datacleaned$Gruppo), ]
dati_filtrati$Risposta <- mappa_likert[as.character(dati_filtrati[[colonna]])]
dati_filtrati <- dati_filtrati[!is.na(dati_filtrati$Risposta) & dati_filtrati$Risposta != "", ]
dati_filtrati$Risposta <- factor(dati_filtrati$Risposta, levels = livelli_ordinati, ordered = TRUE)
freq_table <- as.data.frame(table(dati_filtrati$Risposta, dati_filtrati$Gruppo))
colnames(freq_table) <- c("Risposta", "Gruppo", "Frequenza")
totali <- aggregate(Frequenza ~ Gruppo, data = freq_table, sum)
freq_table <- merge(freq_table, totali, by = "Gruppo", suffixes = c("", "_Totale"))
freq_table$Percentuale <- (freq_table$Frequenza / freq_table$Frequenza_Totale) * 100
ggplot(freq_table, aes(x = Risposta, y = Percentuale, fill = Gruppo)) +
geom_col(position = position_dodge(width = 0.8), width = 0.7) +
geom_text(aes(label = paste0("n=", Frequenza)),
position = position_dodge(width = 0.8), vjust = -0.4, size = 5) +
labs(
title = titolo,
subtitle = paste("N =", sum(freq_table$Frequenza)),
x = "Risposta",
y = "Percentuale",
fill = "Gruppo"
) +
scale_x_discrete(drop = FALSE, limits = livelli_ordinati) +
scale_y_continuous(breaks = seq(0, 100, by = 5)) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(face = "bold", size = 15, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
plot.margin = margin(t = 20, r = 10, b = 10, l = 10)
)
}
## Funzione per dati disaggregati - Likert "Per niente-Completamente"
plot_likert_gruppi_completamente <- function(colonna, titolo) {
datacleaned$Gruppo <- ifelse(datacleaned$"1" %in% c("PO, PA, RTD, RTT"), "Strutturati",
ifelse(datacleaned$"1" %in% c("Dottorato, assegno di ricerca"), "Non-strutturati", NA))
mappa_likert <- c(
"Per niente" = "Per niente", "per niente" = "Per niente",
"Poco" = "Poco", "poco" = "Poco",
"Abbastanza" = "Abbastanza", "abbastanza" = "Abbastanza",
"Completamente" = "Completamente", "completamente" = "Completamente"
)
livelli_ordinati <- c("Per niente", "Poco", "Abbastanza", "Completamente")
dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]) & !is.na(datacleaned$Gruppo), ]
dati_filtrati$Risposta <- mappa_likert[as.character(dati_filtrati[[colonna]])]
dati_filtrati <- dati_filtrati[!is.na(dati_filtrati$Risposta) & dati_filtrati$Risposta != "", ]
dati_filtrati$Risposta <- factor(dati_filtrati$Risposta, levels = livelli_ordinati, ordered = TRUE)
freq_table <- as.data.frame(table(dati_filtrati$Risposta, dati_filtrati$Gruppo))
colnames(freq_table) <- c("Risposta", "Gruppo", "Frequenza")
totali <- aggregate(Frequenza ~ Gruppo, data = freq_table, sum)
freq_table <- merge(freq_table, totali, by = "Gruppo", suffixes = c("", "_Totale"))
freq_table$Percentuale <- (freq_table$Frequenza / freq_table$Frequenza_Totale) * 100
ggplot(freq_table, aes(x = Risposta, y = Percentuale, fill = Gruppo)) +
geom_col(position = position_dodge(width = 0.8), width = 0.7) +
geom_text(aes(label = paste0("n=", Frequenza)),
position = position_dodge(width = 0.8), vjust = -0.4, size = 5) +
labs(
title = titolo,
subtitle = paste("N =", sum(freq_table$Frequenza)),
x = "Risposta",
y = "Percentuale",
fill = "Gruppo"
) +
scale_x_discrete(drop = FALSE, limits = livelli_ordinati) +
scale_y_continuous(breaks = seq(0, 100, by = 5)) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(face = "bold", size = 15, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
plot.margin = margin(t = 20, r = 10, b = 10, l = 10)
)
}
plot_frequenze("1", "")
