dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]) & !is.na(datacleaned$Gruppo), ]
if (nrow(dati_filtrati) == 0) {
warning("Nessun dato disponibile per il grafico.")
return(NULL)
}
freq_table <- as.data.frame(table(Risposta = dati_filtrati[[colonna]], Gruppo = dati_filtrati$Gruppo))
colnames(freq_table)[3] <- "Frequenza"
totali <- aggregate(Frequenza ~ Gruppo, data = freq_table, sum)
freq_table <- merge(freq_table, totali, by = "Gruppo", suffixes = c("", "_Totale"))
freq_table$Percentuale <- (freq_table$Frequenza / freq_table$Frequenza_Totale) * 100
max_y <- max(freq_table$Percentuale) + 10  # aggiunta margine
ggplot(freq_table, aes(x = Risposta, y = Percentuale, fill = Gruppo)) +
geom_col(position = position_dodge(width = 0.8), width = 0.7) +
geom_text(aes(label = paste0("n=", Frequenza)),
position = position_dodge(width = 0.8), vjust = -0.4, size = 6) +
labs(
title = titolo,
subtitle = paste("N =", sum(freq_table$Frequenza)),
x = "Risposta",
y = "Percentuale",
fill = "Gruppo"
) +
scale_y_continuous(breaks = seq(0, 100, by = 5), limits = c(0, max_y)) +
theme_minimal(base_size = 18) +
theme(
plot.title = element_text(face = "bold", size = 20, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
plot.margin = margin(t = 20, r = 10, b = 10, l = 10)
)
}
## Funzione per dati disaggregati - Likert "Per niente-Molto" con testi ingranditi
plot_likert_gruppi_molto <- function(colonna, titolo) {
datacleaned$Gruppo <- ifelse(datacleaned$"1" %in% c("PO, PA, RTD, RTT"), "Strutturati",
ifelse(datacleaned$"1" %in% c("Dottorato, assegno di ricerca"), "Non-strutturati", NA))
mappa_likert <- c(
"Per niente" = "Per niente", "per niente" = "Per niente",
"Poco" = "Poco", "poco" = "Poco",
"Abbastanza" = "Abbastanza", "abbastanza" = "Abbastanza",
"Molto" = "Molto", "molto" = "Molto"
)
livelli_ordinati <- c("Per niente", "Poco", "Abbastanza", "Molto")
dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]) & !is.na(datacleaned$Gruppo), ]
dati_filtrati$Risposta <- mappa_likert[as.character(dati_filtrati[[colonna]])]
dati_filtrati <- dati_filtrati[!is.na(dati_filtrati$Risposta) & dati_filtrati$Risposta != "", ]
dati_filtrati$Risposta <- factor(dati_filtrati$Risposta, levels = livelli_ordinati, ordered = TRUE)
freq_table <- as.data.frame(table(dati_filtrati$Risposta, dati_filtrati$Gruppo))
colnames(freq_table) <- c("Risposta", "Gruppo", "Frequenza")
totali <- aggregate(Frequenza ~ Gruppo, data = freq_table, sum)
freq_table <- merge(freq_table, totali, by = "Gruppo", suffixes = c("", "_Totale"))
freq_table$Percentuale <- (freq_table$Frequenza / freq_table$Frequenza_Totale) * 100
max_y <- max(freq_table$Percentuale) + 10  # aggiunto margine verticale
ggplot(freq_table, aes(x = Risposta, y = Percentuale, fill = Gruppo)) +
geom_col(position = position_dodge(width = 0.8), width = 0.7) +
geom_text(aes(label = paste0("n=", Frequenza)),
position = position_dodge(width = 0.8), vjust = -0.4, size = 6) +
labs(
title = titolo,
subtitle = paste("N =", sum(freq_table$Frequenza)),
x = "Risposta",
y = "Percentuale",
fill = "Gruppo"
) +
scale_x_discrete(drop = FALSE, limits = livelli_ordinati) +
scale_y_continuous(breaks = seq(0, 100, by = 5), limits = c(0, max_y)) +
theme_minimal(base_size = 18) +
theme(
plot.title = element_text(face = "bold", size = 20, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
plot.margin = margin(t = 20, r = 10, b = 10, l = 10)
)
}
## Funzione per dati disaggregati - Likert "Per niente-Completamente" con testi ingranditi
plot_likert_gruppi_completamente <- function(colonna, titolo) {
datacleaned$Gruppo <- ifelse(datacleaned$"1" %in% c("PO, PA, RTD, RTT"), "Strutturati",
ifelse(datacleaned$"1" %in% c("Dottorato, assegno di ricerca"), "Non-strutturati", NA))
mappa_likert <- c(
"Per niente" = "Per niente", "per niente" = "Per niente",
"Poco" = "Poco", "poco" = "Poco",
"Abbastanza" = "Abbastanza", "abbastanza" = "Abbastanza",
"Completamente" = "Completamente", "completamente" = "Completamente"
)
livelli_ordinati <- c("Per niente", "Poco", "Abbastanza", "Completamente")
dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]) & !is.na(datacleaned$Gruppo), ]
dati_filtrati$Risposta <- mappa_likert[as.character(dati_filtrati[[colonna]])]
dati_filtrati <- dati_filtrati[!is.na(dati_filtrati$Risposta) & dati_filtrati$Risposta != "", ]
dati_filtrati$Risposta <- factor(dati_filtrati$Risposta, levels = livelli_ordinati, ordered = TRUE)
freq_table <- as.data.frame(table(dati_filtrati$Risposta, dati_filtrati$Gruppo))
colnames(freq_table) <- c("Risposta", "Gruppo", "Frequenza")
totali <- aggregate(Frequenza ~ Gruppo, data = freq_table, sum)
freq_table <- merge(freq_table, totali, by = "Gruppo", suffixes = c("", "_Totale"))
freq_table$Percentuale <- (freq_table$Frequenza / freq_table$Frequenza_Totale) * 100
max_y <- max(freq_table$Percentuale) + 10  # margine per etichette
ggplot(freq_table, aes(x = Risposta, y = Percentuale, fill = Gruppo)) +
geom_col(position = position_dodge(width = 0.8), width = 0.7) +
geom_text(aes(label = paste0("n=", Frequenza)),
position = position_dodge(width = 0.8), vjust = -0.4, size = 6) +
labs(
title = titolo,
subtitle = paste("N =", sum(freq_table$Frequenza)),
x = "Risposta",
y = "Percentuale",
fill = "Gruppo"
) +
scale_x_discrete(drop = FALSE, limits = livelli_ordinati) +
scale_y_continuous(breaks = seq(0, 100, by = 5), limits = c(0, max_y)) +
theme_minimal(base_size = 18) +
theme(
plot.title = element_text(face = "bold", size = 20, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
plot.margin = margin(t = 20, r = 10, b = 10, l = 10)
)
}
plot_tasso_risposta(totali_strutturati = 65, totali_non_strutturati = 77)
#| echo: false
rm(list= ls())
library(here)
library(readxl)
library(ggplot2)
library(dplyr)
library(patchwork)
library(tm)
library(wordcloud)
library(jcolors)
######################################## Importazione Dataset
dataMRB <- read_excel(here("dati.xlsx"))
dataMRB <- data.frame(dataMRB)
######################################## DATACLEANING
## 1.1. Eliminazione di righe == preview (compilazioni pre-15 aprile),
## questionari non completi
## prime due righe ridondanti
datacleaned <- dataMRB[-(c(1:12, 62, 67)), -(c(2:6,8:17))]
datacleaned <- datacleaned[datacleaned$Finished == "True", ]
## Rinominazione degli item ID
item_renamed <- matrix(data = c("Start date", "Finished", 1, 2.1, 2.2, 2.3, 2.4,
2.5, 3, 4, 5, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6,
6.7, 7.1, 7.2, 7.3, 8.1, 8.2, 8.3, 8.4, 8.5,
8.6, 9.1, 9.2, 9.3, 10.1, 10.2, 10.3, 10.4,
10.5, 11.1, 11.2, 11.3, 12.1, 12.2, 13.1,
13.2, 13.3, 13.4, 13.5, 14, 15, 16
), 1, 48)
colnames(datacleaned) <- as.character(datacleaned[1, ])  # Set first row as column names
colnames(datacleaned) <- item_renamed
## Rinominazione righe
row_renamed <- matrix(data = c(1:53), nrow = 53, ncol = 1)
rownames(datacleaned) <- as.character(datacleaned[,1])
rownames(datacleaned) <- row_renamed
######################################## FUNZIONI DESCRITTIVE AGGREGATE
## Funzione per plot frequenze
require(ggplot2)
plot_frequenze <- function(colonna, titolo) {
dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]), ]
if (nrow(dati_filtrati) == 0) {
warning("Nessun dato disponibile per il grafico.")
return(NULL)
}
freq_table <- as.data.frame(table(Risposta = dati_filtrati[[colonna]]))
colnames(freq_table)[2] <- "Frequenza"
freq_table$Percentuale <- (freq_table$Frequenza / sum(freq_table$Frequenza)) * 100
N <- sum(freq_table$Frequenza)
max_y <- max(freq_table$Percentuale) + 10  # aggiunto margine per non tagliare etichette
ggplot(freq_table, aes(x = Risposta, y = Percentuale)) +
geom_col(width = 0.7, fill = "#4682B4", show.legend = FALSE) +
geom_text(aes(label = paste0("n=", Frequenza)), vjust = -0.4, size = 4.5) +
labs(
title = titolo,
subtitle = paste("N =", N),
x = "Risposta",
y = "Percentuale"
) +
scale_y_continuous(breaks = seq(0, 100, by = 5), limits = c(0, max_y)) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(face = "bold", size = 15, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
plot.margin = margin(t = 20, r = 10, b = 10, l = 10)
)
}
plot_frequenze("1", "")
#| echo: false
rm(list= ls())
library(here)
library(readxl)
library(ggplot2)
library(dplyr)
library(patchwork)
library(tm)
library(wordcloud)
library(jcolors)
######################################## Importazione Dataset
dataMRB <- read_excel(here("dati.xlsx"))
dataMRB <- data.frame(dataMRB)
######################################## DATACLEANING
## 1.1. Eliminazione di righe == preview (compilazioni pre-15 aprile),
## questionari non completi
## prime due righe ridondanti
datacleaned <- dataMRB[-(c(1:12, 62, 67)), -(c(2:6,8:17))]
datacleaned <- datacleaned[datacleaned$Finished == "True", ]
## Rinominazione degli item ID
item_renamed <- matrix(data = c("Start date", "Finished", 1, 2.1, 2.2, 2.3, 2.4,
2.5, 3, 4, 5, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6,
6.7, 7.1, 7.2, 7.3, 8.1, 8.2, 8.3, 8.4, 8.5,
8.6, 9.1, 9.2, 9.3, 10.1, 10.2, 10.3, 10.4,
10.5, 11.1, 11.2, 11.3, 12.1, 12.2, 13.1,
13.2, 13.3, 13.4, 13.5, 14, 15, 16
), 1, 48)
colnames(datacleaned) <- as.character(datacleaned[1, ])  # Set first row as column names
colnames(datacleaned) <- item_renamed
## Rinominazione righe
row_renamed <- matrix(data = c(1:53), nrow = 53, ncol = 1)
rownames(datacleaned) <- as.character(datacleaned[,1])
rownames(datacleaned) <- row_renamed
######################################## FUNZIONI DESCRITTIVE AGGREGATE
## Funzione per plot frequenze
require(ggplot2)
plot_frequenze <- function(colonna, titolo) {
dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]), ]
if (nrow(dati_filtrati) == 0) {
warning("Nessun dato disponibile per il grafico.")
return(NULL)
}
freq_table <- as.data.frame(table(Risposta = dati_filtrati[[colonna]]))
colnames(freq_table)[2] <- "Frequenza"
freq_table$Percentuale <- (freq_table$Frequenza / sum(freq_table$Frequenza)) * 100
N <- sum(freq_table$Frequenza)
max_y <- max(freq_table$Percentuale) + 10  # aggiunto margine per non tagliare etichette
ggplot(freq_table, aes(x = Risposta, y = Percentuale)) +
geom_col(width = 1, fill = "#4682B4", show.legend = FALSE) +
geom_text(aes(label = paste0("n=", Frequenza)), vjust = -0.4, size = 4.5) +
labs(
title = titolo,
subtitle = paste("N =", N),
x = "Risposta",
y = "Percentuale"
) +
scale_y_continuous(breaks = seq(0, 100, by = 5), limits = c(0, max_y)) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(face = "bold", size = 15, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
plot.margin = margin(t = 20, r = 10, b = 10, l = 10)
)
}
plot_frequenze("1", "")
#| echo: false
rm(list= ls())
library(here)
library(readxl)
library(ggplot2)
library(dplyr)
library(patchwork)
library(tm)
library(wordcloud)
library(jcolors)
######################################## Importazione Dataset
dataMRB <- read_excel(here("dati.xlsx"))
dataMRB <- data.frame(dataMRB)
######################################## DATACLEANING
## 1.1. Eliminazione di righe == preview (compilazioni pre-15 aprile),
## questionari non completi
## prime due righe ridondanti
datacleaned <- dataMRB[-(c(1:12, 62, 67)), -(c(2:6,8:17))]
datacleaned <- datacleaned[datacleaned$Finished == "True", ]
## Rinominazione degli item ID
item_renamed <- matrix(data = c("Start date", "Finished", 1, 2.1, 2.2, 2.3, 2.4,
2.5, 3, 4, 5, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6,
6.7, 7.1, 7.2, 7.3, 8.1, 8.2, 8.3, 8.4, 8.5,
8.6, 9.1, 9.2, 9.3, 10.1, 10.2, 10.3, 10.4,
10.5, 11.1, 11.2, 11.3, 12.1, 12.2, 13.1,
13.2, 13.3, 13.4, 13.5, 14, 15, 16
), 1, 48)
colnames(datacleaned) <- as.character(datacleaned[1, ])  # Set first row as column names
colnames(datacleaned) <- item_renamed
## Rinominazione righe
row_renamed <- matrix(data = c(1:53), nrow = 53, ncol = 1)
rownames(datacleaned) <- as.character(datacleaned[,1])
rownames(datacleaned) <- row_renamed
######################################## FUNZIONI DESCRITTIVE AGGREGATE
## Funzione per plot frequenze
require(ggplot2)
plot_frequenze <- function(colonna, titolo) {
dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]), ]
if (nrow(dati_filtrati) == 0) {
warning("Nessun dato disponibile per il grafico.")
return(NULL)
}
freq_table <- as.data.frame(table(Risposta = dati_filtrati[[colonna]]))
colnames(freq_table)[2] <- "Frequenza"
freq_table$Percentuale <- (freq_table$Frequenza / sum(freq_table$Frequenza)) * 100
N <- sum(freq_table$Frequenza)
max_y <- max(freq_table$Percentuale) + 10  # aggiunto margine per non tagliare etichette
ggplot(freq_table, aes(x = Risposta, y = Percentuale)) +
geom_col(width = 0.7, fill = "#4682B4", show.legend = FALSE) +
geom_text(aes(label = paste0("n=", Frequenza)), vjust = -0.4, size = 6) +
labs(
title = titolo,
subtitle = paste("N =", N),
x = "Risposta",
y = "Percentuale"
) +
scale_y_continuous(breaks = seq(0, 100, by = 5), limits = c(0, max_y)) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(face = "bold", size = 15, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
plot.margin = margin(t = 20, r = 10, b = 10, l = 10)
)
}
plot_frequenze("1", "")
#| echo: false
rm(list= ls())
library(here)
library(readxl)
library(ggplot2)
library(dplyr)
library(patchwork)
library(tm)
library(wordcloud)
library(jcolors)
######################################## Importazione Dataset
dataMRB <- read_excel(here("dati.xlsx"))
dataMRB <- data.frame(dataMRB)
######################################## DATACLEANING
## 1.1. Eliminazione di righe == preview (compilazioni pre-15 aprile),
## questionari non completi
## prime due righe ridondanti
datacleaned <- dataMRB[-(c(1:12, 62, 67)), -(c(2:6,8:17))]
datacleaned <- datacleaned[datacleaned$Finished == "True", ]
## Rinominazione degli item ID
item_renamed <- matrix(data = c("Start date", "Finished", 1, 2.1, 2.2, 2.3, 2.4,
2.5, 3, 4, 5, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6,
6.7, 7.1, 7.2, 7.3, 8.1, 8.2, 8.3, 8.4, 8.5,
8.6, 9.1, 9.2, 9.3, 10.1, 10.2, 10.3, 10.4,
10.5, 11.1, 11.2, 11.3, 12.1, 12.2, 13.1,
13.2, 13.3, 13.4, 13.5, 14, 15, 16
), 1, 48)
colnames(datacleaned) <- as.character(datacleaned[1, ])  # Set first row as column names
colnames(datacleaned) <- item_renamed
## Rinominazione righe
row_renamed <- matrix(data = c(1:53), nrow = 53, ncol = 1)
rownames(datacleaned) <- as.character(datacleaned[,1])
rownames(datacleaned) <- row_renamed
######################################## FUNZIONI DESCRITTIVE AGGREGATE
## Funzione per plot frequenze
require(ggplot2)
plot_frequenze <- function(colonna, titolo) {
dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]), ]
if (nrow(dati_filtrati) == 0) {
warning("Nessun dato disponibile per il grafico.")
return(NULL)
}
freq_table <- as.data.frame(table(Risposta = dati_filtrati[[colonna]]))
colnames(freq_table)[2] <- "Frequenza"
freq_table$Percentuale <- (freq_table$Frequenza / sum(freq_table$Frequenza)) * 100
N <- sum(freq_table$Frequenza)
max_y <- max(freq_table$Percentuale) + 10  # aggiunto margine per non tagliare etichette
ggplot(freq_table, aes(x = Risposta, y = Percentuale)) +
geom_col(width = 0.7, fill = "#4682B4", show.legend = FALSE) +
geom_text(aes(label = paste0("n=", Frequenza)), vjust = -0.4, size = 4.5) +
labs(
title = titolo,
subtitle = paste("N =", N),
x = "Risposta",
y = "Percentuale"
) +
scale_y_continuous(breaks = seq(0, 100, by = 5), limits = c(0, max_y)) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(face = "bold", size = 15, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
plot.margin = margin(t = 20, r = 10, b = 10, l = 10)
)
}
plot_frequenze("1", "")
#| echo: false
rm(list= ls())
library(here)
library(readxl)
library(ggplot2)
library(dplyr)
library(patchwork)
library(tm)
library(wordcloud)
library(jcolors)
######################################## Importazione Dataset
dataMRB <- read_excel(here("dati.xlsx"))
dataMRB <- data.frame(dataMRB)
######################################## DATACLEANING
## 1.1. Eliminazione di righe == preview (compilazioni pre-15 aprile),
## questionari non completi
## prime due righe ridondanti
datacleaned <- dataMRB[-(c(1:12, 62, 67)), -(c(2:6,8:17))]
datacleaned <- datacleaned[datacleaned$Finished == "True", ]
## Rinominazione degli item ID
item_renamed <- matrix(data = c("Start date", "Finished", 1, 2.1, 2.2, 2.3, 2.4,
2.5, 3, 4, 5, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6,
6.7, 7.1, 7.2, 7.3, 8.1, 8.2, 8.3, 8.4, 8.5,
8.6, 9.1, 9.2, 9.3, 10.1, 10.2, 10.3, 10.4,
10.5, 11.1, 11.2, 11.3, 12.1, 12.2, 13.1,
13.2, 13.3, 13.4, 13.5, 14, 15, 16
), 1, 48)
colnames(datacleaned) <- as.character(datacleaned[1, ])  # Set first row as column names
colnames(datacleaned) <- item_renamed
## Rinominazione righe
row_renamed <- matrix(data = c(1:53), nrow = 53, ncol = 1)
rownames(datacleaned) <- as.character(datacleaned[,1])
rownames(datacleaned) <- row_renamed
######################################## FUNZIONI DESCRITTIVE AGGREGATE
## Funzione per plot frequenze
require(ggplot2)
plot_frequenze <- function(colonna, titolo) {
dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]), ]
if (nrow(dati_filtrati) == 0) {
warning("Nessun dato disponibile per il grafico.")
return(NULL)
}
freq_table <- as.data.frame(table(Risposta = dati_filtrati[[colonna]]))
colnames(freq_table)[2] <- "Frequenza"
freq_table$Percentuale <- (freq_table$Frequenza / sum(freq_table$Frequenza)) * 100
N <- sum(freq_table$Frequenza)
max_y <- max(freq_table$Percentuale) + 10  # aggiunto margine per non tagliare etichette
ggplot(freq_table, aes(x = Risposta, y = Percentuale)) +
geom_col(width = 0.7, fill = "#4682B4", show.legend = FALSE) +
geom_text(aes(label = paste0("n=", Frequenza)), vjust = -0.4, size = 4.5) +
labs(
title = titolo,
subtitle = paste("N =", N),
x = "Risposta",
y = "Percentuale"
) +
scale_y_continuous(breaks = seq(0, 100, by = 5), limits = c(0, max_y)) +
theme_minimal(base_size = 16) +
theme(
plot.title = element_text(face = "bold", size = 15, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
plot.margin = margin(t = 20, r = 10, b = 10, l = 10)
)
}
plot_frequenze("1", "")
#| echo: false
rm(list= ls())
library(here)
library(readxl)
library(ggplot2)
library(dplyr)
library(patchwork)
library(tm)
library(wordcloud)
library(jcolors)
######################################## Importazione Dataset
dataMRB <- read_excel(here("dati.xlsx"))
dataMRB <- data.frame(dataMRB)
######################################## DATACLEANING
## 1.1. Eliminazione di righe == preview (compilazioni pre-15 aprile),
## questionari non completi
## prime due righe ridondanti
datacleaned <- dataMRB[-(c(1:12, 62, 67)), -(c(2:6,8:17))]
datacleaned <- datacleaned[datacleaned$Finished == "True", ]
## Rinominazione degli item ID
item_renamed <- matrix(data = c("Start date", "Finished", 1, 2.1, 2.2, 2.3, 2.4,
2.5, 3, 4, 5, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6,
6.7, 7.1, 7.2, 7.3, 8.1, 8.2, 8.3, 8.4, 8.5,
8.6, 9.1, 9.2, 9.3, 10.1, 10.2, 10.3, 10.4,
10.5, 11.1, 11.2, 11.3, 12.1, 12.2, 13.1,
13.2, 13.3, 13.4, 13.5, 14, 15, 16
), 1, 48)
colnames(datacleaned) <- as.character(datacleaned[1, ])  # Set first row as column names
colnames(datacleaned) <- item_renamed
## Rinominazione righe
row_renamed <- matrix(data = c(1:53), nrow = 53, ncol = 1)
rownames(datacleaned) <- as.character(datacleaned[,1])
rownames(datacleaned) <- row_renamed
######################################## FUNZIONI DESCRITTIVE AGGREGATE
## Funzione per plot frequenze
require(ggplot2)
plot_frequenze <- function(colonna, titolo) {
dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]), ]
if (nrow(dati_filtrati) == 0) {
warning("Nessun dato disponibile per il grafico.")
return(NULL)
}
freq_table <- as.data.frame(table(Risposta = dati_filtrati[[colonna]]))
colnames(freq_table)[2] <- "Frequenza"
freq_table$Percentuale <- (freq_table$Frequenza / sum(freq_table$Frequenza)) * 100
N <- sum(freq_table$Frequenza)
max_y <- max(freq_table$Percentuale) + 10  # aggiunto margine per non tagliare etichette
ggplot(freq_table, aes(x = Risposta, y = Percentuale)) +
geom_col(width = 0.7, fill = "#4682B4", show.legend = FALSE) +
geom_text(aes(label = paste0("n=", Frequenza)), vjust = -0.4, size = 4.5) +
labs(
title = titolo,
subtitle = paste("N =", N),
x = "Risposta",
y = "Percentuale"
) +
scale_y_continuous(breaks = seq(0, 100, by = 5), limits = c(0, max_y)) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(face = "bold", size = 18, hjust = 0.5),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
plot.margin = margin(t = 20, r = 10, b = 10, l = 10)
)
}
plot_frequenze("1", "")
