import Pandas as pd
!pip install sentence-transformers
import Pandas as pd
!pip install Pandas
import Pandas as pd
import Pandas as pd
import numpy as np
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
!pip install seaborn
import seaborn as sns
from sklearn.metrics.pairwise import cosine_similarity
from sentence_transformers import SentenceTransformer
from scipy.stats import skewnorm
# set desired sample size
N = 500
# Create a strongly positively skewed variable
x1 = skewnorm.rvs(a=20, loc=0, scale=1, size=N)
# Create a normally distributed variable highly correlated with x1
x2 = 0.8*x1 + np.random.normal(0, 0.5, size=N)
# Create a third negatively skewed variable with much higher variance
x3 = skewnorm.rvs(a=-5, loc=0, scale=5, size=N)
# Combine into a DataFrame
df = pd.DataFrame({'x1': x1, 'x2': x2, 'x3': x3})
# Pairplot to visualize relationships
sns.pairplot(df);
plt.show(); plt.close()
n = 300
# generate three different clusters and combine them in a single 2-D array
c1 = np.random.normal(loc=[0, 0], scale=[0.9, 1.4], size=(n, 2))
c2 = np.random.normal(loc=[3, 3], scale=[1.2, 0.8], size=(n, 2))
c3 = np.random.normal(loc=[-2, 4], scale=[0.6, 1.3], size=(n, 2))
x = np.vstack([c1, c2, c3])
# generate a dataframe in DataFrame and add labels of true cluster
df = pd.DataFrame(x, columns=["x1", "x2"])
df["TrueCluster"] = ["c1"]*n + ["c2"]*n + ["c3"]*n
# Scatter plot with color by true cluster label
sns.scatterplot(data=df, x="x1", y="x2", hue="TrueCluster")
plt.title("Simulated Data with 3 True Clusters")
plt.xlabel("x1")
plt.ylabel("x2")
plt.show()
!pip install Pandas
import Pandas as pd
import Pandas as pd
n = 30
# generate three different clusters and combine them in a single 2-D array
c1 = np.random.normal(loc=[0, 0], scale=[0.9, 1.4], size=(n, 2))
c2 = np.random.normal(loc=[3, 3], scale=[1.2, 0.8], size=(n, 2))
c3 = np.random.normal(loc=[-2, 4], scale=[0.6, 1.3], size=(n, 2))
x = np.vstack([c1, c2, c3])
# generate a dataframe in DataFrame and add labels of true cluster
df = pd.DataFrame(x, columns=["x1", "x2"])
df["TrueCluster"] = ["c1"]*n + ["c2"]*n + ["c3"]*n
# Scatter plot with color by true cluster label
sns.scatterplot(data=df, x="x1", y="x2", hue="TrueCluster")
plt.title("Simulated Data with 3 True Clusters")
plt.xlabel("x1")
plt.ylabel("x2")
plt.show()
import Pandas as pd
import pandas as pd
import pandas as pd
n = 300
# generate three different clusters and combine them in a single 2-D array
c1 = np.random.normal(loc=[0, 0], scale=[0.9, 1.4], size=(n, 2))
c2 = np.random.normal(loc=[3, 3], scale=[1.2, 0.8], size=(n, 2))
c3 = np.random.normal(loc=[-2, 4], scale=[0.6, 1.3], size=(n, 2))
x = np.vstack([c1, c2, c3])
# generate a dataframe in DataFrame and add labels of true cluster
df = pd.DataFrame(x, columns=["x1", "x2"])
df["TrueCluster"] = ["c1"]*n + ["c2"]*n + ["c3"]*n
# Scatter plot with color by true cluster label
sns.scatterplot(data=df, x="x1", y="x2", hue="TrueCluster")
plt.title("Simulated Data with 3 True Clusters")
plt.xlabel("x1")
plt.ylabel("x2")
plt.show()
