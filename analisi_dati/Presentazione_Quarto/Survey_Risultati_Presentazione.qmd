---
title: "Risultati Survey - MRB"
format: 
  revealjs:
    center: true
    logo: "Psicostat_LOGO.jpg"
    embed-resources: true
    slide-number: true
editor: visual
---

```{r setup}
#| echo: false
rm(list= ls())
library(here)
library(readxl)
library(ggplot2)
library(dplyr)
library (patchwork)

######################################## Importazione Dataset

dataMRB <- read_excel(here("dati.xlsx"))
dataMRB <- data.frame(dataMRB)

######################################## DATACLEANING

## 1.1. Eliminazione di righe == preview (compilazioni pre-15 aprile), 
## questionari non completi
## prime due righe ridondanti

datacleaned <- dataMRB[-(c(1:12, 62, 67)), -(c(2:6,8:17))]
datacleaned <- datacleaned [datacleaned$Finished == "True",]

## Rinominazione degli item ID

item_renamed <- matrix(data = c("Start date", "Finished", 1, 2.1, 2.2, 2.3, 2.4,
                                2.5, 3, 4, 5, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6,
                                6.7, 7.1, 7.2, 7.3, 8.1, 8.2, 8.3, 8.4, 8.5, 
                                8.6, 9.1, 9.2, 9.3, 10.1, 10.2, 10.3, 10.4,
                                10.5, 11.1, 11.2, 11.3, 12.1, 12.2, 13.1, 
                                13.2, 13.3, 13.4, 13.5, 14, 15, 16
                                ), 1, 48)

colnames(datacleaned) <- as.character(datacleaned[1, ])  # Set first row as column names
colnames(datacleaned) <- item_renamed


######################################## FUNZIONI DESCRITTIVE AGGREGATE

## Funzione per plot frequenze

plot_frequenze <- function(colonna, titolo) {
  # Rimuove valori NA
  dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]), ]
  
  # Esci se non ci sono dati
  if (nrow(dati_filtrati) == 0) {
    warning("Nessun dato disponibile per il grafico.")
    return(NULL)
  }
  
  # Calcola frequenze assolute e percentuali
  freq_table <- as.data.frame(table(Risposta = dati_filtrati[[colonna]]))
  colnames(freq_table)[2] <- "Frequenza"
  freq_table$Percentuale <- (freq_table$Frequenza / sum(freq_table$Frequenza)) * 100
  
  # Crea il grafico
  ggplot(freq_table, aes(x = Risposta, y = Percentuale, fill = Risposta)) +
    geom_col(width = 0.7, show.legend = FALSE) +
    geom_text(aes(label = Frequenza), vjust = -0.4, size = 5) +
    labs(
      title = titolo,
      x = "Risposta",
      y = "Percentuale"
    ) +
    theme_minimal(base_size = 14) +
    theme(
      plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
      axis.title.x = element_text(face = "bold"),
      axis.title.y = element_text(face = "bold")
    )
}


## Funzione per likert "Per niente-Molto"

plot_likert_molto <- function(colonna, titolo) {
  dati <- datacleaned[[colonna]]
  
  # Mapping responses to standardized labels
  mappa_likert <- c(
    "Per niente" = "Per niente", "per niente" = "Per niente",
    "Poco" = "Poco", "poco" = "Poco",
    "Abbastanza" = "Abbastanza", "abbastanza" = "Abbastanza",
    "Molto" = "Molto", "molto" = "Molto"
  )
  
  dati_raggruppati <- mappa_likert[as.character(dati)]
  dati_raggruppati <- dati_raggruppati[!is.na(dati_raggruppati) & dati_raggruppati != ""]
  
  livelli_ordinati <- c("Per niente", "Poco", "Abbastanza", "Molto")
  dati_fattore <- factor(dati_raggruppati, levels = livelli_ordinati, ordered = TRUE)
  
  # Frequencies and percentages
  freq_table <- as.data.frame(table(Risposta = dati_fattore))
  colnames(freq_table)[2] <- "Frequenza"
  freq_table$Percentuale <- (freq_table$Frequenza / sum(freq_table$Frequenza)) * 100
  
  # Plot
  ggplot(freq_table, aes(x = Risposta, y = Percentuale, fill = Risposta)) +
    geom_col(width = 0.7, show.legend = FALSE) +
    geom_text(aes(label = ifelse(Frequenza == 0, "", Frequenza)), 
              vjust = -0.4, size = 6) +
    labs(
      title = titolo,
      x = "Risposta",
      y = "Percentuale"
    ) +
    scale_x_discrete(drop = FALSE, limits = livelli_ordinati) +
    theme_minimal(base_size = 16) +
    theme(
      plot.title = element_text(face = "bold", size = 18, hjust = 0.5),
      axis.title.x = element_text(face = "bold"),
      axis.title.y = element_text(face = "bold")
    )
}



## Funzione likert "Per niente-Completamente"
plot_likert_completamente <- function(colonna, titolo) {
  dati <- datacleaned[[colonna]]
  
  # Standardize Likert responses
  mappa_likert_1 <- c(
    "Per niente" = "Per niente", "per niente" = "Per niente",
    "Poco" = "Poco", "poco" = "Poco",
    "Abbastanza" = "Abbastanza", "abbastanza" = "Abbastanza",
    "Completamente" = "Completamente", "completamente" = "Completamente"
  )
  
  dati_raggruppati <- mappa_likert_1[as.character(dati)]
  dati_raggruppati <- dati_raggruppati[!is.na(dati_raggruppati) & dati_raggruppati != ""]
  
  livelli_ordinati <- c("Per niente", "Poco", "Abbastanza", "Completamente")
  dati_fattore <- factor(dati_raggruppati, levels = livelli_ordinati, ordered = TRUE)
  
  # Frequencies and percentages
  freq_table <- as.data.frame(table(Risposta = dati_fattore))
  colnames(freq_table)[2] <- "Frequenza"
  freq_table$Percentuale <- (freq_table$Frequenza / sum(freq_table$Frequenza)) * 100
  
  # Plot
  ggplot(freq_table, aes(x = Risposta, y = Percentuale, fill = Risposta)) +
    geom_col(width = 0.7, show.legend = FALSE) +
    geom_text(aes(label = ifelse(Frequenza == 0, "", Frequenza)),
              vjust = -0.4, size = 6) +
    labs(
      title = titolo,
      x = "Risposta",
      y = "Percentuale"
    ) +
    scale_x_discrete(drop = FALSE, limits = livelli_ordinati) +
    theme_minimal(base_size = 16) +
    theme(
      plot.title = element_text(face = "bold", size = 18, hjust = 0.5),
      axis.title.x = element_text(face = "bold"),
      axis.title.y = element_text(face = "bold")
    )
}


######################################## FUNZIONI DESCRITTIVE DISAGGREGATE

## Rinominare gruppi Strutturati e Non-strutturati

datacleaned$Gruppo <- ifelse(datacleaned$"1" %in% c("PO, PA, RTD, RTT"), "Strutturati",
                             ifelse(datacleaned$"1" %in% c("Dottorato, assegno di ricerca"), "Non-strutturati", NA))


## Funzione per visualizzazione dati disaggregati (dicotomomiche)
  
plot_confronto_gruppi <- function(colonna, titolo) {
  # Aggiunge il gruppo (Strutturati vs Non-strutturati)
  datacleaned$Gruppo <- ifelse(datacleaned$"1" %in% c("PO, PA, RTD, RTT"), "Strutturati",
                               ifelse(datacleaned$"1" %in% c("Dottorato, assegno di ricerca"), "Non-strutturati", NA))

  
  # Crea sottoinsieme dei dati validi
  dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]) & !is.na(datacleaned$Gruppo), ]
  
  # Se non ci sono dati, esci
  if (nrow(dati_filtrati) == 0) {
    warning("Nessun dato disponibile per il grafico.")
    return(NULL)
  }
  
  # Crea tabella frequenze
  freq_table <- as.data.frame(table(Risposta = dati_filtrati[[colonna]], Gruppo = dati_filtrati$Gruppo))
  colnames(freq_table)[3] <- "Frequenza"
  
  # Calcola percentuali all'interno di ciascun gruppo
  totali <- aggregate(Frequenza ~ Gruppo, data = freq_table, sum)
  freq_table <- merge(freq_table, totali, by = "Gruppo", suffixes = c("", "_Totale"))
  freq_table$Percentuale <- (freq_table$Frequenza / freq_table$Frequenza_Totale) * 100
  
  # Grafico
  ggplot(freq_table, aes(x = Risposta, y = Percentuale, fill = Gruppo)) +
    geom_col(position = position_dodge(width = 0.8), width = 0.7) +
    geom_text(aes(label = Frequenza),
              position = position_dodge(width = 0.8), vjust = -0.4, size = 5) +
    labs(
      title = titolo,
      x = "Risposta",
      y = "Percentuale",
      fill = "Gruppo"
    ) +
    theme_minimal(base_size = 14) +
    theme(
      plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
      axis.title.x = element_text(face = "bold"),
      axis.title.y = element_text(face = "bold")
    )
}


## Funzione per dati disaggregati - Likert "Per niente-Molto"
plot_likert_gruppi_molto <- function(colonna, titolo) {
  # Aggiunge il gruppo
  datacleaned$Gruppo <- ifelse(datacleaned$"1" %in% c("PO, PA, RTD, RTT"), "Strutturati",
                               ifelse(datacleaned$"1" %in% c("Dottorato, assegno di ricerca"), "Non-strutturati", NA))
  
  # Mappa valori inconsistenti
  mappa_likert <- c(
    "Per niente" = "Per niente", "per niente" = "Per niente",
    "Poco" = "Poco", "poco" = "Poco",
    "Abbastanza" = "Abbastanza", "abbastanza" = "Abbastanza",
    "Molto" = "Molto", "molto" = "Molto"
  )
  livelli_ordinati <- c("Per niente", "Poco", "Abbastanza", "Molto")
  
  # Pulisce e mappa i dati
  dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]) & !is.na(datacleaned$Gruppo), ]
  dati_filtrati$Risposta <- mappa_likert[as.character(dati_filtrati[[colonna]])]
  dati_filtrati <- dati_filtrati[!is.na(dati_filtrati$Risposta) & dati_filtrati$Risposta != "", ]
  dati_filtrati$Risposta <- factor(dati_filtrati$Risposta, levels = livelli_ordinati, ordered = TRUE)
  
  # Crea tabella frequenze con gestione gruppi
  freq_table <- as.data.frame(table(dati_filtrati$Risposta, dati_filtrati$Gruppo))
  colnames(freq_table) <- c("Risposta", "Gruppo", "Frequenza")
  
  # Percentuali per gruppo
  totali <- aggregate(Frequenza ~ Gruppo, data = freq_table, sum)
  freq_table <- merge(freq_table, totali, by = "Gruppo", suffixes = c("", "_Totale"))
  freq_table$Percentuale <- (freq_table$Frequenza / freq_table$Frequenza_Totale) * 100
  
  # Grafico
  ggplot(freq_table, aes(x = Risposta, y = Percentuale, fill = Gruppo)) +
    geom_col(position = position_dodge(width = 0.8), width = 0.7) +
    geom_text(aes(label = Frequenza),
              position = position_dodge(width = 0.8), vjust = -0.4, size = 5) +
    labs(
      title = titolo,
      x = "Risposta",
      y = "Percentuale",
      fill = "Gruppo"
    ) +
    scale_x_discrete(drop = FALSE, limits = livelli_ordinati) +
    theme_minimal(base_size = 14) +
    theme(
      plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
      axis.title.x = element_text(face = "bold"),
      axis.title.y = element_text(face = "bold")
    )
}


## Funzione per dati disaggregati - Likert "Per niente-Completamente"

plot_likert_gruppi_completamente <- function(colonna, titolo) {
  # Aggiunge il gruppo
  datacleaned$Gruppo <- ifelse(datacleaned$"1" %in% c("PO, PA, RTD, RTT"), "Strutturati",
                               ifelse(datacleaned$"1" %in% c("Dottorato, assegno di ricerca"), "Non-strutturati", NA))
  
  # Mappatura
  mappa_likert <- c(
    "Per niente" = "Per niente", "per niente" = "Per niente",
    "Poco" = "Poco", "poco" = "Poco",
    "Abbastanza" = "Abbastanza", "abbastanza" = "Abbastanza",
    "Completamente" = "Completamente", "completamente" = "Completamente"
  )
  livelli_ordinati <- c("Per niente", "Poco", "Abbastanza", "Completamente")
  
  # Pulizia
  dati_filtrati <- datacleaned[!is.na(datacleaned[[colonna]]) & !is.na(datacleaned$Gruppo), ]
  dati_filtrati$Risposta <- mappa_likert[as.character(dati_filtrati[[colonna]])]
  dati_filtrati <- dati_filtrati[!is.na(dati_filtrati$Risposta) & dati_filtrati$Risposta != "", ]
  dati_filtrati$Risposta <- factor(dati_filtrati$Risposta, levels = livelli_ordinati, ordered = TRUE)
  
  # Tabella frequenze robusta
  freq_table <- as.data.frame(table(dati_filtrati$Risposta, dati_filtrati$Gruppo))
  colnames(freq_table) <- c("Risposta", "Gruppo", "Frequenza")
  
  # Calcolo percentuali
  totali <- aggregate(Frequenza ~ Gruppo, data = freq_table, sum)
  freq_table <- merge(freq_table, totali, by = "Gruppo", suffixes = c("", "_Totale"))
  freq_table$Percentuale <- (freq_table$Frequenza / freq_table$Frequenza_Totale) * 100
  
  # Grafico
  ggplot(freq_table, aes(x = Risposta, y = Percentuale, fill = Gruppo)) +
    geom_col(position = position_dodge(width = 0.8), width = 0.7) +
    geom_text(aes(label = Frequenza),
              position = position_dodge(width = 0.8), vjust = -0.4, size = 5) +
    labs(
      title = titolo,
      x = "Risposta",
      y = "Percentuale",
      fill = "Gruppo"
    ) +
    scale_x_discrete(drop = FALSE, limits = livelli_ordinati) +
    theme_minimal(base_size = 14) +
    theme(
      plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
      axis.title.x = element_text(face = "bold"),
      axis.title.y = element_text(face = "bold")
    )
}
```

# Analisi descrittive

# DEMOGRAFICHE

## A quale categoria del personale appartieni?

```{r demo}
plot_frequenze("1", "")
```

# SCREENING

## Quali metodi utilizzi nella tua ricerca?

```{r scr1}
plot_confronto_gruppi("2.1", "Quantitativo - Sperimentale")
```

## Quali metodi utilizzi nella tua ricerca?

```{r scr2}
plot_confronto_gruppi("2.2", "Quantitativo - Osservazionale")
```

## Quali metodi utilizzi nella tua ricerca?

```{r scr3}
plot_confronto_gruppi("2.3", "Quantitativo - Altro")
```

## Quali metodi utilizzi nella tua ricerca?

```{r scr4}
plot_confronto_gruppi("2.4", "Qualitativo")
```

## Quali metodi utilizzi nella tua ricerca?

```{r scr5}
plot_confronto_gruppi("2.5", "Teorico")
```

## Hai un account su OSF?

```{r scr6}
plot_confronto_gruppi("3", "")
```

## Hai mai sentito parlare della crisi di replicabilità?

```{r scr7}
plot_confronto_gruppi("4", "")
```

## Se sì, pensi sia un problema rilevante per il progresso scientifico?

```{r scr8}
plot_confronto_gruppi("5", "")
```

## Quanto ritieni che queste possano esserne le cause?

```{r scr9}
plot_likert_gruppi_molto("6.1", "Metodi obsoleti")
```

## Quanto ritieni che queste possano esserne le cause?

```{r scr10}
plot_likert_gruppi_molto("6.2", "Scarsa qualità dati")
```

## Quanto ritieni che queste possano esserne le cause?

```{r scr11}
plot_likert_gruppi_molto("6.3", "Mancanza validità esterna")
```

## Quanto ritieni che queste possano esserne le cause?

```{r scr12}
plot_likert_gruppi_molto("6.4", "Mancanza validità interna")
```

## Quanto ritieni che queste possano esserne le cause?

```{r scr13}
plot_likert_gruppi_molto("6.5", "Publication Bias")
```

## Quanto ritieni che queste possano esserne le cause?

```{r scr14}
plot_likert_gruppi_molto("6.6", "GDL Ricercatore")
```

## Quanto ritieni che queste possano esserne le cause?

```{r scr15}
plot_likert_gruppi_molto("6.7", "Frode")
```

# OPEN SCIENCE

## Hai mai sentito parlare di queste pratiche?

```{r os1}
plot_confronto_gruppi("7.1", "Pre-registrazione Ipotesi")
```

## Hai mai sentito parlare di queste pratiche?

```{r os2}
plot_confronto_gruppi("7.2", "Pre-registrazione Analisi")
```

## Hai mai sentito parlare di queste pratiche?

```{r os3}
plot_confronto_gruppi("7.3", "Registered Report")
```

## Hai mai utilizzato queste pratiche?

```{r os4}
plot_confronto_gruppi("8.1", "Pre-registrazione Ipotesi")
```

## Hai mai utilizzato queste pratiche?

```{r os5}
plot_confronto_gruppi("8.2", "Pre-registrazione Analisi")
```

## Hai mai utilizzato queste pratiche?

```{r os6}
plot_confronto_gruppi("8.3", "Registered Report")
```

## Hai mai utilizzato queste pratiche?

```{r os7}
plot_confronto_gruppi("8.4", "Open Materials")
```

## Hai mai utilizzato queste pratiche?

```{r os8}
plot_confronto_gruppi("8.5", "Open Code")
```

## Hai mai utilizzato queste pratiche?

```{r os9}
plot_confronto_gruppi("8.6", "Open Data")
```

## Queste pratiche possono contribuire al progresso della disciplina?

```{r os10}
plot_likert_gruppi_molto("9.1", "Pre-registrazione Ipotesi")
```

## Queste pratiche possono contribuire al progresso della disciplina?

```{r os11}
plot_likert_gruppi_molto("9.2", "Pre-registrazione Analisi")
```

## Queste pratiche possono contribuire al progresso della disciplina?

```{r os12}
plot_likert_gruppi_molto("9.3", "Registered Report")
```

## Userai una di queste pratiche nel tuo prossimo studio?

```{r os13}
plot_likert_gruppi_molto("10.1", "Pre-registrazione Ipotesi")
```

## Userai una di queste pratiche nel tuo prossimo studio?

```{r os14}
plot_likert_gruppi_molto("10.2", "Pre-registrazione Analisi")
```

## Userai una di queste pratiche nel tuo prossimo studio?

```{r os15}
plot_likert_gruppi_molto("10.3", "Open Materials")
```

## Userai una di queste pratiche nel tuo prossimo studio?

```{r os16}
plot_likert_gruppi_molto("10.4", "Open Code")
```

## Userai una di queste pratiche nel tuo prossimo studio?

```{r os17}
plot_likert_gruppi_molto("10.5", "Open Data")
```

# MRB

## Per la parte statistica, con chi ti confronti di solito?

```{r mrb1}
plot_confronto_gruppi("11.1", "Qualcuno del gruppo di ricerca")
```

## Per la parte statistica, con chi ti confronti di solito?

```{r mrb2}
plot_confronto_gruppi("11.2", "Esperto Esterno - Co-autore")
```

## Per la parte statistica, con chi ti confronti di solito?

```{r mrb3}
plot_confronto_gruppi("11.3", "Esperto esterno - NO Co-autore")
```

## Se pre-registrassi uno studio, avresti bisogno di aiuto?

```{r mrb4}
plot_likert_gruppi_completamente("12.1", "")
```

## Se pre-registrassi uno studio, saresti più sicuro dopo confronto col MRB?

```{r mrb5}
plot_likert_gruppi_completamente("12.2", "")
```

## Quanto un MRB sarebbe utile a:

```{r mrb6}
plot_likert_gruppi_completamente("13.1", "Essere riferimento in ambito metodologico")
```

## Quanto un MRB sarebbe utile a:

```{r mrb7}
plot_likert_gruppi_completamente("13.2", "Promuovere collaborazioni")
```

## Quanto un MRB sarebbe utile a:

```{r mrb8}
plot_likert_gruppi_completamente("13.3", "Prevenire sprechi")
```

## Quanto un MRB sarebbe utile a:

```{r mrb9}
plot_likert_gruppi_completamente("13.4", "Migliorare qualità ricerca")
```

## Quanto un MRB sarebbe utile a:

```{r mrb10}
plot_likert_gruppi_completamente("13.5", "Promuovere buone pratiche")
```

## Il MRB dovrebbe essere integrato al Comitato Etico?

```{r mrb11}
plot_confronto_gruppi("14", "")
```

## Riterresti utile una tavola rotonda relativa al MRB?

```{r mrb12}
plot_confronto_gruppi("16", "")
```
